{"version":3,"sources":["js/03-promises.js"],"names":["form","document","querySelector","addEventListener","onPromise","sum","evt","preventDefault","amount","target","value","firstDelay","Number","delay","step","i","setTimeout","createPromise","then","position","console","log","catch","Promise","resolve","reject","Math","random"],"mappings":";AAAA,MAAMA,EAAOC,SAASC,cAAc,SAGpCF,EAAKG,iBAAiB,SAAUC,GAChC,IAAIC,EAAM,KAEV,SAASD,EAAUE,GACjBA,EAAIC,iBACEC,MAAAA,EAASF,EAAIG,OAAOD,OAAOE,MAC7BC,IAAAA,EAAaC,OAAON,EAAIG,OAAOI,MAAMH,OACrCI,EAAOF,OAAON,EAAIG,OAAOK,KAAKJ,OAE7B,IAAA,IAAIK,EAAI,EAAGA,GAAKP,EAAQO,IAC3BV,EAAMM,EAAaG,EAEhBE,WAAW,KACZC,EAAcF,EAAGV,GACda,KAAK,EAAGC,SAAAA,EAAUN,MAAAA,MACvBO,QAAQC,2BAA2BF,QAAeN,SAEnDS,MAAM,EAAIH,SAAAA,EAAUN,MAAAA,MACnBO,QAAQC,0BAA0BF,QAAeN,UAErCR,GAGhB,SAASY,EAAcE,EAAUN,GAGxB,OAFPO,QAAQC,IAAIF,GACVC,QAAQC,IAAIR,GACP,IAAIU,QAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,IAEpCH,EAAQ,CAAEL,SAAAA,EAAUN,MAAAA,IAEtBY,EAAO,CAAEN,SAAAA,EAAUN,MAAAA","file":"03-promises.33d56510.js","sourceRoot":"../src","sourcesContent":["const form = document.querySelector('.form')\n// const amount = document.getElementsByTagName('.amount')\n\nform.addEventListener('submit', onPromise)\nlet sum = null;\n\nfunction onPromise(evt) {\n  evt.preventDefault();\n  const amount = evt.target.amount.value;\n  let firstDelay = Number(evt.target.delay.value);\n  let step = Number(evt.target.step.value);    \n\n  for (let i = 1; i <= amount; i++) {\n    sum = firstDelay + step;\n  \n       setTimeout(() => {\n      createPromise(i, sum)\n        .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(( { position, delay } ) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n             }, sum)\n  }\n}  \nfunction createPromise(position, delay) {\n  console.log(position)\n    console.log(delay)\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay })\n    }\n    reject({ position, delay })\n      });\n  }\n\n\n\n  //     createPromise(2, 1500)\n  //       .then((position, delay) => {\n  //   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  // })\n  // .catch(( position, delay ) => {\n  //   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  // });"]}